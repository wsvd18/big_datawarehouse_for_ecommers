#create a table
create table dws.dws_trade_detail_di
(
age bigint,
sku_id string,
sku_num bigint,
order_count bigint,
order_amount double,
order_status string,
province_id string,
province_name string,
region_id string,
region_name string,
sku_name string,
category1_id string,
category1_name string,
category2_id string,
category2_name string,
category3_id string,
category3_name string,
ds_str string
)
row format delimited fields terminated by '\t';



#!/bin/bash

# Optimize to prevent data skew: use mapjoin, local mode, strict mode, and parallel computation if necessary
hive -e "
set hive.exec.reducers.max=1009;
set mapreduce.job.reduces=1;"
set hive.optimize.skewjoin=true;
set hive.skewjoin.key=100000;
set hive.map.aggr=true;

# Full update of the wide table (incremental update can use INSERT INTO and add a time-based WHERE condition)

INSERT OVERWRITE TABLE dws.dws_trade_detail_di
SELECT
    YEAR(CURRENT_DATE()) - YEAR(t1.birthday) AS age,
    t7.sku_id,
    SUM(t4.sku_num) OVER (PARTITION BY t4.id) AS sku_num,
    COUNT(t4.id) OVER (PARTITION BY t4.id) AS order_count,
    t4.order_amount,
    t4.order_status,
    t5.province_id,
    t5.province_name,
    t5.region_id,
    t5.region_name,
    t7.sku_name,
    t7.category1_id,
    t7.category1_name,
    t7.category2_id,
    t7.category2_name,
    t7.category3_id,
    t7.category3_name,
    t4.ds AS ds_str
FROM
    dim.dim_user_info_df t1
JOIN
    dwd.dwd_fac_order_detailinfo_di t4 ON t1.id = t4.user_id
JOIN
    dim.dim_base_province_df t5 ON t4.province_id = t5.province_id
JOIN
    dim.dim_sku_info_df t7 ON t4.sku_id = t7.sku_id
WHERE
    t4.order_status NOT IN ('1003', '1005', '1006');
"


